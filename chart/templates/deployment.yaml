apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bevo.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "bevo.name" . }}
    helm.sh/chart: {{ include "bevo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: ingress-dotnet
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-dotnet
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-dotnet
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: ingress-dotnet
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
            weight: 100
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.environment }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.healthChecks.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthChecks.livenessProbe.httpGet }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.healthChecks.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.healthChecks.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthChecks.readinessProbe.httpGet }}
              port: http
              scheme: HTTP
            failureThreshold: {{ .Values.healthChecks.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.healthChecks.readinessProbe.periodSeconds }}
            initialDelaySeconds: {{ .Values.healthChecks.readinessProbe.initialDelaySeconds }}
          {{- end }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: tmp
          emptyDir: {}
